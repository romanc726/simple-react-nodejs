import React from 'react'

const getIcon = (name, color) => {
  switch (name) {
    case 'Logo':
      return (
        <>
          <path
            d="M150 75C150 89.8336 145.601 104.334 137.36 116.668C129.119 129.001 117.406 138.614 103.701 144.291C89.9968 149.968 74.9168 151.453 60.3682 148.559C45.8196 145.665 32.4559 138.522 21.967 128.033C11.4781 117.544 4.335 104.18 1.44111 89.6318C-1.45279 75.0832 0.032469 60.0032 5.70904 46.2987C11.3856 32.5943 20.9985 20.8809 33.3322 12.6398C45.6659 4.39868 60.1664 0 75 0C94.8897 0.00513282 113.963 7.90854 128.027 21.9727C142.091 36.0368 149.995 55.1103 150 75V75ZM121.034 98.0121C127.137 98.0121 132.99 95.5876 137.306 91.272C141.622 86.9564 144.046 81.1032 144.046 75C144.046 68.8968 141.622 63.0436 137.306 58.728C132.99 54.4124 127.137 51.9879 121.034 51.9879H28.7724C22.6692 51.9879 16.816 54.4124 12.5004 58.728C8.18478 63.0436 5.7603 68.8968 5.7603 75C5.7603 81.1032 8.18478 86.9564 12.5004 91.272C16.816 95.5876 22.6692 98.0121 28.7724 98.0121H121.034Z"
            fill={color}
          />
          <path
            d="M308.423 11.7142H216.161V138.538H296.921L230.121 42.9941C224.158 34.7748 230.121 23.2638 240.393 23.2638H308.403V150.087H233.636C214.272 150.105 195.654 142.624 181.686 129.214C167.718 115.804 159.485 97.5063 158.714 78.1584C157.942 58.8104 164.693 39.9154 177.549 25.4359C190.405 10.9565 208.369 2.01751 227.672 0.493739C227.672 0.493739 230.344 0.290436 233.636 0.290436H308.423V11.7142Z"
            fill={color}
          />
        </>
      )
    case 'Apple':
      return (
        <path
          d="M65.8,49.692c-0.027-4.875,2.179-8.555,6.642-11.265-2.5-3.573-6.27-5.539-11.251-5.925-4.716-.372-9.87,2.75-11.756,2.75-1.993,0-6.562-2.617-10.149-2.617C31.877,32.756,24,38.547,24,50.33a33.088,33.088,0,0,0,1.913,10.786c1.7,4.875,7.837,16.831,14.24,16.631,3.348-.08,5.712-2.378,10.069-2.378,4.224,0,6.416,2.378,10.149,2.378C66.827,77.655,72.379,66.789,74,61.9c-8.661-4.078-8.2-11.955-8.2-12.208h0ZM58.285,27.881a12.511,12.511,0,0,0,3.188-9.631,14.086,14.086,0,0,0-9.02,4.636,12.707,12.707,0,0,0-3.4,9.551C52.52,32.7,55.682,30.923,58.285,27.881Z"
          fill={color}
        />
      )
    case 'Facebook':
      return (
        <path
          d="M43.52,80V53.164H34.531V42.5H43.52V34.1C43.52,24.969,49.1,20,57.242,20a75.461,75.461,0,0,1,8.227.422v9.539H59.82c-4.43,0-5.285,2.109-5.285,5.191V42.5h10L63.16,53.164H54.535V80"
          fill={color}
        />
      )
    case 'Instagram':
      return (
        <path
          d="M50.007,34.62A15.38,15.38,0,1,0,65.387,50,15.355,15.355,0,0,0,50.007,34.62Zm0,25.379a10,10,0,1,1,10-10,10.017,10.017,0,0,1-10,10h0ZM69.6,33.991A3.587,3.587,0,1,1,66.016,30.4,3.579,3.579,0,0,1,69.6,33.991Zm10.186,3.641c-0.228-4.805-1.325-9.062-4.846-12.569s-7.764-4.6-12.569-4.846c-4.953-.281-19.8-0.281-24.75,0-4.792.228-9.049,1.325-12.569,4.832s-4.6,7.764-4.846,12.569c-0.281,4.953-.281,19.8,0,24.75,0.228,4.805,1.325,9.062,4.846,12.569s7.764,4.6,12.569,4.846c4.953,0.281,19.8.281,24.75,0,4.805-.228,9.062-1.325,12.569-4.846s4.6-7.764,4.846-12.569c0.281-4.953.281-19.784,0-24.736h0Zm-6.4,30.05a10.123,10.123,0,0,1-5.7,5.7c-3.949,1.566-13.318,1.2-17.682,1.2s-13.747.348-17.682-1.2a10.123,10.123,0,0,1-5.7-5.7c-1.566-3.949-1.2-13.318-1.2-17.682s-0.348-13.747,1.2-17.682a10.123,10.123,0,0,1,5.7-5.7c3.949-1.566,13.318-1.2,17.682-1.2s13.747-.348,17.682,1.2a10.123,10.123,0,0,1,5.7,5.7C74.957,36.267,74.6,45.636,74.6,50S74.957,63.747,73.391,67.682Z"
          fill={color}
        />
      )
    case 'Discord':
      return (
        <path
          d="M71.6857 32.9178C66.4914 28.7435 58.2779 28.0363 57.9307 28.0063C57.3821 27.9592 56.8614 28.2699 56.6364 28.7713C56.6279 28.7885 56.1693 30.1192 55.7257 31.4028C61.7621 32.4592 65.8636 34.8035 66.0821 34.932C67.1064 35.5278 67.4493 36.8413 66.8514 37.8635C66.455 38.5449 65.7371 38.9263 65 38.9263C64.6336 38.9263 64.265 38.8342 63.9264 38.637C63.8664 38.6006 57.8493 35.1763 50.0043 35.1763C42.1571 35.1763 36.1379 38.6028 36.0779 38.637C35.0557 39.2306 33.7443 38.8813 33.1507 37.857C32.5571 36.837 32.9021 35.5278 33.9221 34.932C34.1407 34.8035 38.2571 32.4506 44.3107 31.3963C43.8436 30.0978 43.3721 28.7885 43.3636 28.7713C43.1386 28.2678 42.6179 27.9506 42.0693 28.0063C41.7221 28.0342 33.5086 28.7413 28.2457 32.9735C25.4943 35.5149 20 50.3735 20 63.2199C20 63.447 20.0579 63.6678 20.1714 63.8649C23.9664 70.5292 34.3121 72.2735 36.6693 72.3485C36.6843 72.3506 36.6971 72.3506 36.71 72.3506C37.1257 72.3506 37.5179 72.1513 37.7643 71.8149L40.3143 68.3606C34.7214 67.0128 31.7643 64.8935 31.5864 64.7628C30.635 64.062 30.4293 62.7206 31.13 61.767C31.8286 60.8178 33.1657 60.6078 34.1171 61.3042C34.1964 61.3556 39.6543 65.1763 50 65.1763C60.3864 65.1763 65.8293 61.3406 65.8829 61.302C66.8343 60.612 68.1757 60.8199 68.8721 61.7756C69.5664 62.727 69.365 64.0599 68.4179 64.7585C68.24 64.8892 65.2979 67.0042 59.7179 68.352L62.2357 71.8128C62.4821 72.1513 62.8743 72.3485 63.29 72.3485C63.305 72.3485 63.3179 72.3485 63.3307 72.3463C65.69 72.2713 76.0357 70.527 79.8286 63.8627C79.9421 63.6656 80 63.4449 80 63.2178C80 50.3735 74.5057 35.5149 71.6857 32.9178ZM41.4286 58.7478C39.0607 58.7478 37.1429 56.3499 37.1429 53.3906C37.1429 50.4313 39.0607 48.0335 41.4286 48.0335C43.7964 48.0335 45.7143 50.4313 45.7143 53.3906C45.7143 56.3499 43.7964 58.7478 41.4286 58.7478ZM58.5714 58.7478C56.2036 58.7478 54.2857 56.3499 54.2857 53.3906C54.2857 50.4313 56.2036 48.0335 58.5714 48.0335C60.9393 48.0335 62.8571 50.4313 62.8571 53.3906C62.8571 56.3499 60.9393 58.7478 58.5714 58.7478Z"
          fill={color}
        />
      )
    case 'Opensea':
      return (
        <>
          <path
            d="M50 20C33.434 20 20 33.434 20 50C20 66.566 33.434 80 50 80C66.566 80 80 66.566 80 50C80 33.434 66.572 20 50 20ZM34.802 51.008L34.928 50.804L42.734 38.594C42.848 38.42 43.118 38.438 43.202 38.63C44.504 41.552 45.632 45.188 45.104 47.45C44.882 48.38 44.264 49.64 43.568 50.804C43.478 50.972 43.382 51.14 43.274 51.302C43.226 51.374 43.142 51.416 43.052 51.416H35.03C34.814 51.416 34.688 51.182 34.802 51.008ZM69.584 55.208C69.584 55.322 69.518 55.418 69.422 55.46C68.816 55.718 66.746 56.672 65.888 57.866C63.692 60.92 62.018 65.288 58.268 65.288H42.632C37.088 65.288 32.6 60.782 32.6 55.22V55.04C32.6 54.896 32.72 54.776 32.87 54.776H41.582C41.756 54.776 41.882 54.932 41.87 55.106C41.804 55.67 41.912 56.252 42.182 56.78C42.698 57.83 43.772 58.484 44.93 58.484H49.244V55.118H44.978C44.762 55.118 44.63 54.866 44.756 54.686C44.804 54.614 44.852 54.542 44.912 54.458C45.314 53.882 45.89 52.994 46.466 51.98C46.856 51.296 47.234 50.564 47.54 49.832C47.6 49.7 47.648 49.562 47.702 49.43C47.786 49.196 47.87 48.974 47.93 48.758C47.99 48.572 48.044 48.38 48.092 48.2C48.236 47.576 48.296 46.916 48.296 46.232C48.296 45.962 48.284 45.68 48.26 45.416C48.248 45.122 48.212 44.828 48.176 44.534C48.152 44.276 48.104 44.018 48.056 43.754C47.99 43.364 47.906 42.974 47.81 42.584L47.774 42.434C47.702 42.164 47.636 41.912 47.552 41.642C47.306 40.802 47.03 39.98 46.73 39.212C46.622 38.906 46.502 38.612 46.376 38.324C46.196 37.88 46.01 37.478 45.842 37.1C45.752 36.926 45.68 36.77 45.608 36.608C45.524 36.428 45.44 36.248 45.35 36.074C45.29 35.942 45.218 35.816 45.17 35.696L44.642 34.724C44.57 34.592 44.69 34.43 44.834 34.472L48.134 35.366H48.146C48.152 35.366 48.152 35.366 48.158 35.366L48.59 35.492L49.07 35.624L49.244 35.672V33.716C49.244 32.768 50 32 50.942 32C51.41 32 51.836 32.192 52.136 32.504C52.442 32.816 52.634 33.242 52.634 33.716V36.626L52.988 36.722C53.012 36.734 53.042 36.746 53.066 36.764C53.15 36.824 53.276 36.92 53.432 37.04C53.558 37.136 53.69 37.256 53.846 37.382C54.164 37.64 54.548 37.97 54.962 38.348C55.07 38.444 55.178 38.54 55.28 38.642C55.814 39.14 56.414 39.722 56.99 40.37C57.152 40.556 57.308 40.736 57.47 40.934C57.626 41.132 57.8 41.324 57.944 41.516C58.142 41.774 58.346 42.044 58.532 42.326C58.616 42.458 58.718 42.596 58.796 42.728C59.036 43.082 59.24 43.448 59.438 43.814C59.522 43.982 59.606 44.168 59.678 44.348C59.9 44.84 60.074 45.338 60.182 45.842C60.218 45.95 60.242 46.064 60.254 46.172V46.196C60.29 46.34 60.302 46.496 60.314 46.658C60.362 47.168 60.338 47.684 60.23 48.2C60.182 48.416 60.122 48.62 60.05 48.842C59.972 49.052 59.9 49.268 59.804 49.478C59.618 49.904 59.402 50.336 59.144 50.732C59.06 50.882 58.958 51.038 58.862 51.188C58.754 51.344 58.64 51.494 58.544 51.638C58.406 51.824 58.262 52.016 58.112 52.19C57.98 52.37 57.848 52.55 57.698 52.712C57.494 52.958 57.296 53.186 57.086 53.408C56.966 53.552 56.834 53.702 56.696 53.834C56.564 53.984 56.426 54.116 56.306 54.236C56.096 54.446 55.928 54.602 55.784 54.74L55.442 55.046C55.394 55.094 55.328 55.118 55.262 55.118H52.634V58.484H55.94C56.678 58.484 57.38 58.226 57.95 57.74C58.142 57.572 58.988 56.84 59.99 55.736C60.026 55.694 60.068 55.67 60.116 55.658L69.242 53.018C69.416 52.97 69.584 53.096 69.584 53.276V55.208Z"
            fill={color}
          />
        </>
      )
    case 'Twitter':
      return (
        <path
          d="M69.861,39.816c0.032,0.444.032,0.888,0.032,1.333C69.892,54.7,59.581,70.3,40.736,70.3A28.958,28.958,0,0,1,25,65.7a21.2,21.2,0,0,0,2.475.127A20.523,20.523,0,0,0,40.2,61.453a10.266,10.266,0,0,1-9.581-7.107,12.923,12.923,0,0,0,1.935.159,10.838,10.838,0,0,0,2.7-.349A10.249,10.249,0,0,1,27.03,44.1V43.972a10.32,10.32,0,0,0,4.632,1.3A10.263,10.263,0,0,1,28.49,31.567,29.128,29.128,0,0,0,49.619,42.291a11.568,11.568,0,0,1-.254-2.348A10.257,10.257,0,0,1,67.1,32.931a20.175,20.175,0,0,0,6.5-2.475A10.22,10.22,0,0,1,69.1,36.1,20.543,20.543,0,0,0,75,34.518a22.028,22.028,0,0,1-5.139,5.3h0Z"
          fill={color}
        />
      )
    case 'YouTube':
      return (
        <path
          d="M76.351,36.715a6.911,6.911,0,0,0-4.863-4.894C67.2,30.664,50,30.664,50,30.664s-17.2,0-21.488,1.157a6.911,6.911,0,0,0-4.863,4.894C22.5,41.032,22.5,50.039,22.5,50.039s0,9.007,1.149,13.324a6.808,6.808,0,0,0,4.863,4.816C32.8,69.336,50,69.336,50,69.336s17.2,0,21.488-1.157a6.808,6.808,0,0,0,4.863-4.816C77.5,59.046,77.5,50.039,77.5,50.039S77.5,41.032,76.351,36.715Zm-31.976,21.5V41.861L58.75,50.039,44.375,58.217h0Z"
          fill={color}
        />
      )
    case 'Discord':
      return (
        <path
          d="M50,20.056a30.705,30.705,0,0,0-9.7,59.835c1.535.282,2.1-.666,2.1-1.48,0-.728-.027-2.659-.042-5.221-8.54,1.855-10.342-4.116-10.342-4.116-1.4-3.547-3.409-4.491-3.409-4.491-2.787-1.905.211-1.866.211-1.866,3.081.217,4.7,3.164,4.7,3.164,2.739,4.691,7.186,3.337,8.935,2.551A6.564,6.564,0,0,1,44.4,64.327c-6.817-.775-13.985-3.409-13.985-15.174a11.866,11.866,0,0,1,3.161-8.238,11.039,11.039,0,0,1,.3-8.126s2.577-.825,8.442,3.148a29.087,29.087,0,0,1,15.373,0c5.862-3.973,8.435-3.148,8.435-3.148a11.027,11.027,0,0,1,.3,8.126,11.844,11.844,0,0,1,3.156,8.238c0,11.8-7.178,14.39-14.018,15.15,1.1.948,2.084,2.822,2.084,5.686,0,4.1-.037,7.416-.037,8.422,0,.821.553,1.777,2.111,1.477A30.707,30.707,0,0,0,50,20.056Z"
          fill={color}
        />
      )
    case 'Arrow':
      return (
        <polygon
          points="51.829 7.172 46.172 12.828 79.343 46 4 46 4 54 79.343 54 46.172 87.172 51.829 92.828 94.658 50 51.829 7.172"
          fill={color}
        />
      )
    case 'Plus':
      return (
        <polygon
          points="80 46 54 46 54 20 46 20 46 46 20 46 20 54 46 54 46 80 54 80 54 54 80 54 80 46"
          fill={color}
        />
      )
    case 'Minus':
      return <rect x="20" y="46" width="60" height="8" fill={color} />
    case 'Checkmark':
      return (
        <path
          fill="none"
          stroke={color}
          strokeWidth="13"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeMiterlimit="10"
          d="M12.1 52.1l24.4 24.4 53-53"
        />
      )
    case 'Chevron Down':
      return (
        <polygon
          points="51.5 85.657 8.672 42.828 14.328 37.172 51.5 74.343 88.672 37.172 94.328 42.828 51.5 85.657"
          fill={color}
        />
      )
    case 'Search':
      return (
        <path d="M 9 2 C 5.1458514 2 2 5.1458514 2 9 C 2 12.854149 5.1458514 16 9 16 C 10.747998 16 12.345009 15.348024 13.574219 14.28125 L 14 14.707031 L 14 16 L 19.585938 21.585938 C 20.137937 22.137937 21.033938 22.137938 21.585938 21.585938 C 22.137938 21.033938 22.137938 20.137938 21.585938 19.585938 L 16 14 L 14.707031 14 L 14.28125 13.574219 C 15.348024 12.345009 16 10.747998 16 9 C 16 5.1458514 12.854149 2 9 2 z M 9 4 C 11.773268 4 14 6.2267316 14 9 C 14 11.773268 11.773268 14 9 14 C 6.2267316 14 4 11.773268 4 9 C 4 6.2267316 6.2267316 4 9 4 z"/>
      )
    default:
      return <path />
  }
}

const Icon = (props) => {
  const { id = '', name, color, viewBox = '0 0 100 100', className } = props

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox={viewBox}
      aria-labelledby={`${name.replace(/\s/g, '').toLowerCase()}-${id}`}
      className={className || 'icon'}
    >
      <title id={`${name.replace(/\s/g, '').toLowerCase()}-${id}`}>
        {name}
      </title>
      {getIcon(name, color)}
    </svg>
  )
}

export default Icon
